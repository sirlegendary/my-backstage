---

- name: Update all packages to their latest version
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: Add GPG apt Key
  apt_key:
    url: "{{item}}"
    state: present
  with_items: 
    - https://download.docker.com/linux/ubuntu/gpg
    - https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    - https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Repository
  apt_repository:
    repo: "{{item}}"
    state: present
  with_items: 
    - deb https://download.docker.com/linux/ubuntu bionic stable
    - deb https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main
    - deb https://apt.kubernetes.io/ kubernetes-xenial main

- name: Update apt and install docker-ce
  apt:
    update_cache: true
    name: docker-ce 
    state: latest

- name: Install Packages
  ansible.builtin.package:
    name: "{{item}}"
  with_items:
    - unzip
    - jq
    - ca-certificates  
    - gnupg
    - docker-ce-cli 
    - containerd.io
    - nodejs
    - g++ 
    - build-essential
    - kubelet 
    - kubeadm 
    - kubectl

- name: Install "Go" with option --classic
  community.general.snap:
    name: go
    classic: true

# - name: Install NVM
#   become: false
#   shell: |
#     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
#   args:
#     executable: /bin/bash
#     chdir: "$HOME"
#     creates: "$HOME/.nvm/nvm.sh"

- name: Update NPM
  shell: npm install -g npm@9.8.1

- name: Install Yarn
  shell: |
    npm install --global yarn
    yarn set version 1.22.19  
  args:
    executable: /bin/bash
    chdir: "$HOME"

- name: Create Directories
  file:
    path: "{{item}}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: "0750"
  with_items: 
    - /home/ubuntu/backstage
  
- name: Clone Backstage Repo
  git:
    repo: 'https://github.com/backstage/backstage.git'
    dest: /home/ubuntu/backstage
    depth: 1
    version: v1.17.5
